jobs:
  include:
  - stage: Build

    sudo: required
    services:
    - docker
    script: docker build --build-arg CODECOV_TOKEN --build-arg "APP_VERSION=$(make version)" -t "vibioh/$(make name):$(make version)" .
    after_success:
    - echo "${DOCKER_PASS}" | docker login -u vibioh --password-stdin
    - docker push "vibioh/$(make name):$(make version)"

  - stage: Publish

    sudo: required
    services:
    - docker
    script:
    - echo "${DOCKER_PASS}" | docker login -u vibioh --password-stdin
    - docker pull "vibioh/$(make name):$(make version)"
    - docker tag "vibioh/$(make name):$(make version)" "vibioh/$(make name):latest"
    - docker push "vibioh/$(make name):latest"
    after_success:
    - curl -q -sS -X POST https://goreportcard.com/checks?repo=github.com/ViBiOh/mailer

  - stage: Deploy

    script: |
      sed \
        -e "s|\${HTTP_PASSWORD}|${HTTP_PASSWORD}|g" \
        -e "s|\${MAILJET_APIKEY_PUBLIC}|${MAILJET_APIKEY_PUBLIC}|g" \
        -e "s|\${MAILJET_APIKEY_PRIVATE}|${MAILJET_APIKEY_PRIVATE}|g" \
        -e "s|\${MJML_URL}|${MJML_URL}|g" \
        -e "s|\${MJML_USER}|${MJML_USER}|g" \
        -e "s|\${MJML_PASS}|${MJML_PASS}|g" \
        -e "s|\\\$|\$\$|g" \
        docker-compose.yml > docker-compose-env.yml
    deploy:
    - provider: script
      skip_cleanup: true
      script: bash script/deploy "$(make name)" "@docker-compose-env.yml"

stages:
  - Build
  - name: Publish
    if: branch = master && type = push
  - name: Deploy
    if: branch = master && type = push

notifications:
  email: false
